<!DOCTYPE html>
<html>
<head>
    <title>Tag Management</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Oct 17 2018 09:36:31 GMT-0500 (Central Daylight Time) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Oct 17 2018 09:36:31 GMT-0500 (Central Daylight Time)";
        var STORY    = "F69";
        var BUILDER  = "pinro08";
        var CHECKSUM = 28461688235;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk-debug.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.override(Rally.ui.grid.CheckboxModel,{_recordIsSelectable:function(a){return"tag"===a.get("_type")}}),Ext.override(Rally.ui.grid.Grid,{refreshAfterBulkAction:function(){return Ext.create("Deft.Deferred").promise}}),Ext.override(Rally.ui.dialog.TagChooserDialog,{_createChooser:function(){return chooser=this.buildChooser(),chooser?this.mon(chooser,"ready",function(){this.fireEvent("ready",this)},this):this.fireEvent("ready",this),this.add({xtype:"container",items:[chooser]}),chooser}}),Ext.define("CATS.tag-management.utils.menu.bulk.Archive",{alias:"widget.tagmanagementbulkarchive",extend:"Rally.ui.menu.bulk.MenuItem",mixins:{messageable:"Rally.Messageable"},config:{onBeforeAction:function(){},onActionComplete:function(){console.log("onActionComplete")},text:"Archive...",handler:function(){this._archiveRecords(this.records,null)},predicate:function(a){return!0}},_archiveRecords:function(a){var b=Ext.create("Rally.data.wsapi.batch.Store",{data:a});Ext.Array.each(a,function(a){a.set("Archived",!0)}),b.sync({success:function(b){this.onSuccess(a,[],{},"")},failure:function(b){this.onSuccess([],a,{},"Error updating tags to archived.")},scope:this})},onSuccess:function(a,b,c,d){var e=a.length+(1===a.length?" item has ":" items have ");a.length===this.records.length?(e+=" been archived",this.publish("bulkActionComplete",e)):(0===a.length&&(e="0 items have been archived"),this.publish("bulkActionError",e+", but "+b.length+" failed: "+d)),Ext.callback(this.onActionComplete,null,[a,b])}}),Ext.define("CATS.tag-management.utils.menu.bulk.Delete",{alias:"widget.tagmanagementbulkdelete",extend:"Rally.ui.menu.bulk.MenuItem",mixins:{messageable:"Rally.Messageable"},config:{onBeforeAction:function(){},onActionComplete:function(){},text:"Delete...",handler:function(){var a=this.records.length;Ext.create("Rally.ui.dialog.ConfirmDialog",{cls:"delete-confirm-dialog",confirmLabel:"Delete",title:"Permanent Delete Warning",width:500,message:'<div>Are you sure you want to delete</div><div><span class="item-display-string">'+a+'</span> Tags?</div><div>&nbsp;</div><div class="associations-will-be-removed-message">Any associations will be removed.</div><div>THERE IS NO UNDO for deleting objects of this type.</div>',listeners:{confirm:function(){this._deleteRecords(this.records,null)},scope:this}})},predicate:function(a){return!0}},_deleteRecords:function(a){var b=_.map(a,function(a){return this._deleteTag(a)},this);Deft.Promise.all(b).then({success:function(a){var b=[],c=[];Ext.Array.each(a,function(a){/ERROR DELETING/.test(a)?c.push(a):b.push(a)});var d="";c.length>0&&(d=c.join("<br/>")),this.onSuccess(b,c,{},d)},scope:this})},_deleteTag:function(a){var b=Ext.create("Deft.Deferred"),c=a.get("_ref"),d=Rally.util.Ref.getOidFromRef(c);return Ext.Ajax.request({url:"/slm/sbt/tag.sp?oid="+d,method:"DELETE",success:function(a){b.resolve(d)},failure:function(){var a=response.responseText;b.resolve("ERROR DELETING "+d+" "+a)}}),b.promise},onSuccess:function(a,b,c,d){var e=a.length+(1===a.length?" item has ":" items have ");if(a.length===this.records.length){e+=" been deleted";var f=Ext.Array.map(a,function(a){return a});this.publish("tagsDeleted",f),this.publish("bulkActionComplete",e)}else 0===a.length&&(e="0 items have been deleted"),this.publish("bulkActionError",e+", but "+b.length+" failed: "+d);Ext.callback(this.onActionComplete,null,[a,b])}}),Ext.define("CATS.tag-management.utils.menu.TagArchive",{extend:"Rally.ui.menu.item.RecordMenuItem",alias:"widget.tagarchivemenuitem",mixins:{messageable:"Rally.Messageable"},clickHideDelay:1,config:{record:void 0,handler:function(){this._archiveTag(this.record)},predicate:function(a){return a.get("Archived")!==!0},text:"Archive"},_archiveTag:function(a){var b=this,c=a.get("_ref"),d=Rally.util.Ref.getOidFromRef(c);Rally.data.ModelFactory.getModel({type:"Tag",success:function(c){c.load(d,{callback:function(c,e){e.wasSuccessful()?(c.set("Archived",!0),c.save({callback:function(c,e){e.wasSuccessful()?b.publish("tagArchived",d):Rally.ui.notify.Notifier.showError({message:"Error Archiving Tag '"+a.get("Name")+"':  "+e.error.errors.join(",")})},scope:this})):Rally.ui.notify.Notifier.showError({message:"Error Retrieving and Archiving Tag '"+a.get("Name")+"':  "+e.error.errors.join(",")})},scope:this})}})}}),Ext.define("CATS.tag-management.utils.menu.TagDelete",{extend:"Rally.ui.menu.item.RecordMenuItem",alias:"widget.tagdeletemenuitem",mixins:{messageable:"Rally.Messageable"},clickHideDelay:1,config:{record:void 0,handler:function(){this._deleteTag(this.record)},predicate:function(a){return!0},text:"Delete"},_deleteTag:function(a){var b=a.get("_ref"),c=Rally.util.Ref.getOidFromRef(b),d=this;Ext.Ajax.request({url:"/slm/sbt/tag.sp?oid="+c,method:"DELETE",success:function(a){a.responseText;d.publish("tagDeleted",c)}})}}),Ext.define("CATS.tag-management.utils.TagMetrics",{logger:new Rally.technicalservices.Logger,tagHash:{},mixins:{observable:"Ext.util.Observable"},tagsLoaded:!1,tagUsageLoaded:!1,tagHistoryLoaded:!1,constructor:function(a){this.getExtendedTagModel(),this.mixins.observable.constructor.call(this,a)},addTagRecords:function(a){this._initializeTagData(a),this.tagsLoaded=!0},archiveTags:function(a){Ext.isArray(a)||(a=[a]),Ext.Array.each(a,function(a){this.tagHash[a].Archived=!0},this)},deleteTags:function(a){Ext.isArray(a)||(a=[a]),Ext.Array.each(a,function(a){delete this.tagHash[a]},this)},updateTagUsage:function(a,b){var c=Rally.util.Ref.getOidFromRef(a._ref);this.tagHash[c].count=0;for(var d=0;d<b.length;d++)for(var e=b[d].get("Tags")&&b[d].get("Tags")._tagsNameArray,f=0;f<e.length;f++){var g=Rally.util.Ref.getOidFromRef(e[f]._ref);g===c&&this.tagHash[c].count++}},_initializeTagData:function(a){this.logger.log("_initializeTagData"),this.tagHash={};for(var b=0;b<a.length;b++){var c=a[b].getData();c.count=0,this.tagHash[c.ObjectID]=c}},addCurrentSnapshots:function(a){var b=this.tagHash;this.reset();for(var c=0;c<a.length;c++)for(var d=a[c].raw.Tags||[],e=0;e<d.length;e++)b[d[e]]||(b[d[e]]={count:0}),b[d[e]].count++;this.tagUsageLoaded=!0,this.tagHash=b,this.fireEvent("update",this)},addCurrentWsapiRecords:function(a){this.logger.log("addWsapiRecords",a.length),this.reset(),tagHash=this.tagHash;for(var b=0;b<a.length;b++){var c=a[b].get("Tags")&&a[b].get("Tags")._tagsNameArray;c.length>0&&_.each(c,function(a){var b=Rally.util.Ref.getOidFromRef(a._ref);tagHash[b].count++})}this.tagUsageLoaded=!0,this.tagHash=tagHash,this.fireEvent("update",this)},_isLoaded:function(a){return this.tagUsageLoaded&&this.tagsLoaded&&(a&&this.tagHistoryLoaded||!a)},addHistoricalSnapshots:function(a){for(var b=this.tagHash,c=0;c<a.length;c++){var d=a[c].raw.Tags||[],e=a[c].raw._PreviousValues&&a[c].raw._PreviousValues.Tags||[];tagDate=Rally.util.DateTime.fromIsoString(a[c].raw._ValidFrom);for(var f=_.difference(d,e),g=0;g<f.length;g++)b[d[g]]&&(!b[d[g]].lastUsed||b[d[g]].lastUsed<tagDate)&&(b[d[g]].lastUsed=tagDate)}this.tagHistoryLoaded=!0,this.tagHash=b,this.fireEvent("update",this)},reset:function(){Ext.Object.each(this.tagHash,function(a,b){b.count=0,b.lastUsed=null}),this.tagUsageLoaded=!1,this.tagHistoryLoaded=!1},getData:function(a,b,c,e,f,g){this.logger.log("getData",a,b,c,e,f,g);var h=Ext.Object.getValues(this.tagHash),i=null;c&&(i=Rally.util.DateTime.add(new Date,"month",-c));var j=null;if(g&&(j=new RegExp(g,"gi")),b||c||!e||!f||j){for(var k=[],l=0;l<h.length;l++){d=h[l];var m=!0;j&&!j.test(d.Name)&&(m=!1),b&&d.count>=b&&(m=!1),i&&i<d.lastUsed&&(m=!1),!e&&d.Archived&&(m=!1),f||0!==d.count||(m=!1),m&&k.push(d)}h=k}return a&&(h=this._findDups(h)),{data:h,model:this.tagModel,pageSize:h.length}},_findDups:function(a){for(var b=[],c=0;c<a.length;c++)for(var d=c+1;d<a.length;d++)a[c].Name.toLowerCase().trim()==a[d].Name.toLowerCase().trim()&&(b.push(a[c].ObjectID),b.push(a[d].ObjectID));return b=_.uniq(b),_.map(b,function(a){return this.tagHash[a]},this)},getExtendedTagModel:function(){return Rally.data.ModelFactory.getModel({type:"tag"}).then({success:function(a){var b=[{name:"count"},{name:"lastUsed"}];this.tagModel=Ext.define("TagMetricsModel",{extend:a,fields:b}),this.fireEvent("ready",this)},scope:this})}}),Ext.define("CATS.tag-management.utils.menu.TagReplace",{extend:"Rally.ui.menu.item.RecordMenuItem",alias:"widget.tagreplacemenuitem",clickHideDelay:1,mixins:{messageable:"Rally.Messageable"},config:{record:void 0,handler:function(){Ext.create("Rally.ui.dialog.TagChooserDialog",{autoShow:!0,records:[],title:"Choose a Tag to Replace With",height:250,listeners:{tagselect:function(a,b){this._replaceTags(b.full)},scope:this}})},predicate:function(a){return!0},text:"Replace With..."},_getModels:function(){return["Defect","DefectSuite","UserStory","TestSet","Task"].concat(this.portfolioItemTypes)},_replaceTags:function(a){var b=[],c=[],d=this.record;Ext.isArray(a)?(b=_.map(a,function(a){return{_ref:a.get("_ref")}}),c=_.map(a,function(a){return a.get("Name")})):(b=[{_ref:a.get("_ref")}],c=[a.get("Name")]);var e=d.get("_ref"),f=d.get("Name");Ext.create("Rally.data.wsapi.artifact.Store",{models:this._getModels(),filters:[{property:"Tags",operator:"contains",value:e}],context:{project:null},fetch:["Tags","Name","ObjectID"]}).load({callback:function(a,d,g){Ext.Array.each(a,function(a){var c=_.filter(a.get("Tags")&&a.get("Tags")._tagsNameArray||[],function(a){return a._ref!==e});c=c.concat(b),a.set("Tags",c)});var h=Ext.create("Rally.data.wsapi.batch.Store",{data:a});h.sync({success:function(d){var g=Ext.String.format("{0} records updated.  Tag '{1}'' replaced by '{2}'",a.length,f,c.join(", "));Rally.ui.notify.Notifier.show({message:g}),b.push({_ref:e}),this.publish("tagDataUpdated",b)},failure:function(a){Rally.ui.notify.Notifier.showError({message:"Error updating Tags."})},scope:this})}}),this._archiveTag(e)},_archiveTag:function(a){var b=Rally.util.Ref.getOidFromRef(a);Rally.data.ModelFactory.getModel({type:"Tag",success:function(a){a.load(b,{callback:function(a,c){c.wasSuccessful()&&(a.set("Archived",!0),a.save({callback:function(a,c){c.wasSuccessful()?this.publish("tagArchived",b):Rally.ui.notify.Notifier.showError({message:"Error Archiving Tag '"+replaceTagName+"':  "+c.error.errors.join(",")})},scope:this}))},scope:this})},scope:this})},constructor:function(a){this.initConfig(a),this.callParent(arguments),this.mixins.messageable.constructor.call(this,a)}}),Ext.define("tag-management",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",tpl:"Hello, <tpl>{_refObjectName}</tpl>"},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"tag-management"},config:{defaultSettings:{useLookback:!1}},launch:function(){this.tagMetrics=Ext.create("CATS.tag-management.utils.TagMetrics",{}),this.subscribe("tagDataUpdated",this._updateTagData,this),this.subscribe("tagArchived",this._updateArchivedTagData,this),this.subscribe("tagDeleted",this._updateDeletedTagData,this),this.subscribe("tagsDeleted",this._updateDeletedTagData,this),this._fetchPortfolioItemTypes().then({success:this._initializeApp,failure:this._showErrorNotification,scope:this}),this._fetchTags(),this._fetchCurrentTagUsageData()},_showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},_updateArchivedTagData:function(a){this.logger.log("updateArchivedTagData"),this.tagMetrics.archiveTags(a),this._updateView()},_updateDeletedTagData:function(a){this.tagMetrics.deleteTags(a);var b="1 Tag Deleted.";Ext.isArray(a)&&(b=a.length+" Tags Deleted."),Rally.ui.notify.Notifier.show({message:b}),this._updateView()},_updateTagData:function(a){this.logger.log("_updateTagData",a),this.setLoading("Updating Tag Usage..."),this._fetchSpecificTagArtifacts(a).then({success:this._updateView,failure:this._showErrorNotification,scope:this}).always(function(){this.setLoading(!1)},this)},_updateView:function(a){this.logger.log("_updateView",a),this.setLoading(!1),this.tagMetrics.un("update"),this.down("#gridBox").removeAll();var b=this.tagMetrics.getData(this.getShowDups(),this.getUsageLessThan(),this.getMonthsSinceUsed(),this.getShowArchived(),this.getShowUnused(),this.getNameContains()),c="No Tags found that meet the selected filters.";this.getShowDups()&&(c="No duplicate Tags found."),this.store=Ext.create("Rally.data.custom.Store",b);var d=this.down("#gridBox").add({xtype:"rallygrid",store:this.store,columnCfgs:this._getColumnCfgs(),showPagingToolbar:!1,enableBulkEdit:!0,enableEditing:!1,scroll:"vertical",viewConfig:{emptyText:'<div class="grid-view-empty">'+c+"</div>"},bulkEditConfig:{items:[{xtype:"tagmanagementbulkarchive"},{xtype:"tagmanagementbulkdelete"}]},showRowActionsColumn:!1,showPagingToolbar:!1}),e=Math.max(this.getHeight()-this.down("#selectorBox").getHeight()-this.down("#toggleBox").getHeight(),100);d.setHeight(e)},_getColumnCfgs:function(){var a=this.portfolioItemTypes,b=[{xtype:"rallyrowactioncolumn",rowActionsFn:function(b){return[{xtype:"tagreplacemenuitem",record:b,portfolioItemTypes:a},{xtype:"tagarchivemenuitem",record:b},{xtype:"tagdeletemenuitem",record:b}]}},{dataIndex:"Name",text:"Name"}];return this.getShowArchived()&&b.push({dataIndex:"Archived",text:"Archived"}),this.getShowHistory()&&b.push({dataIndex:"lastUsed",text:"Last Used"}),b.push({dataIndex:"count",text:"Uses",renderer:function(a){return a||"--"}}),b.push({dataIndex:"CreationDate",text:"Date Created"}),b},_initializeApp:function(a){this.portfolioItemTypes=_.map(a,function(a){return a.get("TypePath")}),this.logger.log("_initializeApp",this.portfolioItemTypes),this.removeAll();var b=this.add({xtype:"container",itemId:"toggleBox",layout:"hbox"}),c=this.add({xtype:"container",itemId:"selectorBox",layout:"hbox"});this.add({xtype:"container",itemId:"gridBox"});this._addToggleButton("btDuplicates","icon-copy","Show Duplicate Tags",this._toggleButton),this._addToggleButton("btHistory","icon-history","Show Last Used Date",this._fetchHistory),this._addToggleButton("btArchived","icon-archive","Show Archived Tags",this._toggleButton),this._addToggleButton("btUnused","icon-none","Show Unused Tags",this._toggleButton);c.add({xtype:"rallytextfield",fieldLabel:"Name contains",labelAlign:"right",itemId:"nameContains",margin:5,labelWidth:100,height:22,width:200}),c.add({xtype:"rallynumberfield",fieldLabel:"Usage Less Than",labelAlign:"right",itemId:"usedFewerThan",margin:5,labelWidth:100,width:150,minValue:1,maxValue:1e3}),c.add({xtype:"rallynumberfield",fieldLabel:"Months Since Last Usage",labelAlign:"right",itemId:"monthsSinceUsed",margin:5,labelWidth:150,width:200,minValue:0,maxValue:120});this._toggleButton();var d=b.add({xtype:"rallybutton",text:"Update",margin:5});d.on("click",this._updateRequested,this)},_addToggleButton:function(a,b,c,d){var e=this.down("#toggleBox").add({xtype:"rallybutton",iconCls:b,cls:"secondary rly-small",enableToggle:!0,itemId:a,toolTipText:c,margin:5});e.on("toggle",d,this)},_updateRequested:function(){this.logger.log("_updateRequested"),this.tagMetrics._isLoaded(this.getShowHistory())?this._updateView():(this.tagMetrics.on("update",this._updateView,this),this.setLoading(!0))},getShowHistory:function(){return this.down("#btHistory").pressed},getShowDups:function(){return this.down("#btDuplicates").pressed},getMonthsSinceUsed:function(){return this.down("#monthsSinceUsed").getValue()||0},getNameContains:function(){return this.down("#nameContains").getValue()||null},getUsageLessThan:function(){return this.down("#usedFewerThan").getValue()||0},getShowArchived:function(){return this.down("#btArchived").pressed},getShowUnused:function(){return this.down("#btUnused").pressed},getUseLookback:function(){return"true"===this.getSetting("useLookback")||this.getSetting("useLookback")===!0?!0:!1},_getModels:function(){return["Defect","DefectSuite","UserStory","TestSet","Task"].concat(this.portfolioItemTypes)},_fetchSpecificTagArtifacts:function(a){var b=Ext.create("Deft.Deferred"),c=_.map(a,function(a){return{property:"Tags",operator:"contains",value:a._ref}});c.length>1&&(c=Rally.data.wsapi.Filter.or(c));var d=this.tagMetrics;return Ext.create("Rally.data.wsapi.artifact.Store",{models:this._getModels(),fetch:["Tags","Name"],filters:c,context:{project:null}}).load({callback:function(c,e){e.wasSuccessful()?(Ext.Array.each(a,function(a){d.updateTagUsage(a,c)}),b.resolve()):b.reject("Error updating Tag counts:  "+e.error.errors.join(","))}}),b.promise},_fetchHistory:function(a,b){this.logger.log("_fetchHistory",b),b?(this._toggleButton(a,b,!0),this._fetchHistoricalTagData().then({success:function(a){this.tagMetrics.addHistoricalSnapshots(a)},failure:this._showErrorNotification,scope:this})):this._toggleButton(a,b)},_toggleButton:function(a,b,c){a&&(b?(a.removeCls("secondary"),a.addCls("primary")):(a.removeCls("primary"),a.addCls("secondary"))),this.getShowDups()?(this.down("#monthsSinceUsed").hide(),this.down("#usedFewerThan").hide()):(this.down("#usedFewerThan").show(),this.getShowHistory()?this.down("#monthsSinceUsed").show():this.down("#monthsSinceUsed").hide())},_fetchCurrentTagDataFromWsapi:function(){return this.logger.log("_fetchCurrentTagDataFromWsapi"),Deft.Promise.all([this._fetchCurrentTagDataForModelFromWsapi("PortfolioItem"),this._fetchCurrentTagDataForModelFromWsapi("HierarchicalRequirement"),this._fetchCurrentTagDataForModelFromWsapi("Defect"),this._fetchCurrentTagDataForModelFromWsapi("TestSet"),this._fetchCurrentTagDataForModelFromWsapi("DefectSuite"),this._fetchCurrentTagDataForModelFromWsapi("TestCase")]).then({success:function(a){this.logger.log("_fetchCurrentTagDataFromWsapi Success");var b=_.flatten(a);this.tagMetrics.addCurrentWsapiRecords(b)},failure:this._showErrorNotification,scope:this})},_fetchCurrentTagDataForModelFromWsapi:function(a){var b=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:a,fetch:["Tags","ObjectID","Name","LastUpdateDate"],filters:this.getArtifactFilters(),pageSize:2e3,context:{project:null},limit:"Infinity"}).load({callback:function(a,c,d){c.wasSuccessful()?b.resolve(a):b.reject(c.error.errors.join(","))}}),b.promise},_fetchPortfolioItemTypes:function(){return this._fetchWsapiRecords({model:"TypeDefinition",fetch:["Name","TypePath","Ordinal"],filters:[{property:"TypePath",operator:"contains",value:"PortfolioItem/"}],sorters:[{property:"Ordinal",direction:"ASC"}]})},_fetchWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c=this;return a.limit||(a.limit="Infinity"),a.pageSize||(a.pageSize=2e3),this.logger.log("Starting load:",a),Ext.create("Rally.data.wsapi.Store",a).load({callback:function(a,d,e){e?b.resolve(a):(c.logger.log("Failed: ",d),b.reject("Problem fetching: "+d.error.errors.join(". ")))}}),b.promise},getTagFilters:function(){var a=this.down("#txtName")&&this.down("#txtName").getValue();return a?[{property:"Name",operator:"contains",value:a}]:[]},getArtifactFilters:function(){var a=this.down("#txtName")&&this.down("#txtName").getValue();return a?[{property:"Tags.Name",operator:"contains",value:a}]:[{property:"Tags.ObjectID",operator:">",value:0}]},_fetchTags:function(){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:"Tag",fetch:["ObjectID","Name","Archived","CreationDate"],pageSize:2e3,limit:"Infinity"}).load({callback:function(b,c,d){if(c.wasSuccessful())this.logger.log("_fetchTags success",b.length),this.tagMetrics.addTagRecords(b),a.resolve(b);else{var e=c&&c.error&&c.error.errors&&c.error.errors.join(",");this._showErrorNotification(e),a.reject(e)}},scope:this}),a.promise},_fetchHistoricalTagData:function(){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.lookback.SnapshotStore",{fetch:["Tags","_ValidFrom","_ValidTo","_PreviousValues.Tags"],find:{Tags:this.getLookbackTagFilterValue(),"_PreviousValues.Tags":{$exists:!0}},removeUnauthorizedSnapshots:!0,limit:"Infinity",useHttpPost:!0}).load({callback:function(b,c,d){if(c.wasSuccessful())this.logger.log("_fetchHistoricalTagData success",b.length),this.tagMetrics.addHistoricalSnapshots(b),a.resolve(b);else{var e=c&&c.error&&c.error.errors&&c.error.errors.join(",");this._showErrorNotification(e),a.reject(e)}},scope:this}),a.promise},getLookbackTagFilterValue:function(){this.down("#txtName")&&this.down("#txtName").getValue();return{$exists:!0}},_fetchCurrentTagUsageData:function(){this.getUseLookback()?this._fetchCurrentTagDataFromLookback():this._fetchCurrentTagDataFromWsapi()},_fetchCurrentTagDataFromLookback:function(){var a=Ext.create("Deft.Deferred");return this.logger.log("_fetchCurrentTagDataFromLookback"),Ext.create("Rally.data.lookback.SnapshotStore",{fetch:["Tags","_ValidFrom","_ValidTo","_TypeHierarchy"],find:{Tags:this.getLookbackTagFilterValue(),__At:"current"},removeUnauthorizedSnapshots:!0,limit:1/0,useHttpPost:!0}).load({callback:function(b,c,d){if(c.wasSuccessful())this.logger.log("_fetchCurrentTagDataFromLookback",b.length,c),this.tagMetrics.addCurrentSnapshots(b),a.resolve(b);else{var e=c&&c.error&&c.error.errors&&c.error.errors.join(",")||"Error loading current tag data from Lookback.";this._showErrorNotification(e),a.reject(e)}},scope:this}),a.promise},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},getSettingsFields:function(){return[{name:"useLookback",xtype:"rallycheckboxfield",fieldLabel:"Enable Lookback Usage",labelAlign:"right"}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});

               Rally.launchApp('tag-management', {
                   name: 'Tag Management'
               });
        });
    </script>

    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.x-window.chooser-dialog label {
  text-transform: none;
}

    </style>

</head>
<body></body>
</html>